name: "Sonarqube scan"

on:
  workflow_call:

jobs:
  sonarscan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clear old artifacts
        run: rm ./TestResults/coverage.opencover.xml || true

      - uses: actions/download-artifact@v2
        with:
          name: coverage
          path: ./TestResults

      - name: Check artifacts
        run: cat ./TestResults/coverage.opencover.xml

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Extract secret files
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          bash decrypt.sh $GPG_PASSPHRASE

      - name: Install SonarQube scanner
        run: |
          sudo apt-get update 
          sudo apt-get install -y dotnet-sdk-8.0
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Build and analyze
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin \
            /k:${{ secrets.SONAR_PROJECT_KEY }} \
            /o:"${{ secrets.SONAR_ORG }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.cs.opencover.reportsPaths=./TestResults/coverage.opencover.xml
          dotnet build
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
